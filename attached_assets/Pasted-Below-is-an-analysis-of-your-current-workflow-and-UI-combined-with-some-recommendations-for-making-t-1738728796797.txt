Below is an analysis of your current workflow and UI combined with some recommendations for making the eBay trigger option more explicit and for displaying the data it pulls:

---

### **Analysis**

1. **Current Behavior**  
   - Your analysis process (in the product form) automatically calls two functions: one to run AI analysis on the product details and a second one (via **`getEbayMarketAnalysis`** in your `ebay.ts` file) that makes a request to `/api/ebay-price` to fetch current pricing data from eBay.
   - The eBay endpoint is protected by middleware that verifies a valid eBay token. When the token isn’t valid, you return a 403 with a message and a suggested redirect to `/settings/ebay-auth`.  
   - In the UI (e.g. in **`ProductForm.tsx`**), the eBay data is merged into the `aiAnalysis` object and the recommended price (and even the “ebayPrice”) are set. However, there is no explicit control for the user to opt in or be alerted that “eBay pricing data” is being fetched.

2. **Issues & Opportunities**  
   - **Clarity:**  
     The trigger for including eBay data is implicit. A user might be unaware that eBay pricing is part of the analysis process—especially if their account isn’t connected or if there’s an error.
   - **Feedback:**  
     There’s no dedicated visual feedback (such as an icon, switch, or additional label) that tells the user that eBay data is being pulled.
   - **Display:**  
     Once fetched, the eBay data (like the median price, average, min/max, etc.) isn’t separately displayed. Instead, it’s just mixed into the AI analysis. Users may want to inspect the raw data that came from eBay.

---

### **Recommendations & Implementation Ideas**

1. **Add a Clear “Include eBay Data” Trigger**  
   - **UI Toggle or Switch:**  
     Place a clear control—such as a toggle/switch labeled “Include eBay Pricing” or “Fetch eBay Data”—near your “Analyze Product” button.  
     - *Implementation hint:* Use one of your UI components (for example, your **`Switch`** from **`ui/switch.tsx`**) to let the user explicitly decide if eBay data should be pulled.  
     - When toggled on, the analysis function would call `getEbayMarketAnalysis` and update local state (or form state) with the returned eBay data.
   - **Feedback for Missing eBay Connection:**  
     If the eBay token isn’t present or is expired, display an inline warning or badge near the toggle (or next to the “Analyze Product” button) that prompts the user to connect via your `/settings/ebay-auth` page.

2. **Show the Fetched eBay Data in the UI**  
   - **Dedicated eBay Data Section:**  
     After analysis completes, add a section in your product analysis results that shows the eBay pricing data. For example, create a new component (e.g. `EbayDataCard`) that displays:
     - Median price, average price, lowest/highest price, number of active listings, etc.
     - You could also include a small chart or list if that suits your design.
   - **Use Visual Cues:**  
     Display icons (like the DollarSign or eBay’s logo if available) and use color coding (similar to how you indicate “Underpriced” or “Optimal Price” on your product cards) to draw attention to the eBay data.
   - **Example Layout:**  
     Inside your analysis result section, you might have a card titled “eBay Market Data” with rows for:
     - **Median Price:** \( \$X.XX \)
     - **Average Price:** \( \$Y.YY \)
     - **Price Range:** \( \$min - \$max \)
     - **Active Listings:** \( Z \)
     - Optionally, a small bar chart or sparkline could be added.

3. **Improve the Analysis Process Flow**  
   - **Step-by-Step Process:**  
     When the user clicks “Analyze Product,” you might want to show a multi-step progress indicator:
     - Step 1: Running internal AI analysis.
     - Step 2: Fetching eBay data (showing a spinner with “Fetching eBay Data…”).
   - **Error Handling:**  
     If the eBay API call fails (due to missing token or rate limits), display an error message in the eBay data section that offers a direct link or button to “Connect eBay Account.”

---

### **Example Code Snippets**

**a. Adding the Toggle Control** (in `ProductForm.tsx`):

```tsx
import { Switch } from "@/components/ui/switch";
import { Label } from "@/components/ui/label";

// Inside your component state:
const [includeEbay, setIncludeEbay] = useState(false);

// In your form, above the Analyze button:
<div className="flex items-center gap-2">
  <Switch
    checked={includeEbay}
    onCheckedChange={(value) => setIncludeEbay(!!value)}
  />
  <Label className="cursor-pointer">Include eBay Pricing Data</Label>
</div>
```

Then update your analysis function to conditionally call `getEbayMarketAnalysis` based on `includeEbay`.

**b. Displaying eBay Data** (after analysis):

```tsx
// Assume ebayData state holds the fetched eBay info:
{ebayData && (
  <div className="mt-4 p-4 border rounded-md bg-muted/10">
    <h3 className="text-lg font-semibold mb-2">eBay Market Data</h3>
    <p>Median Price: ${ebayData.currentPrice.toFixed(2)}</p>
    <p>Average Price: ${ebayData.averagePrice.toFixed(2)}</p>
    <p>Price Range: ${ebayData.lowestPrice.toFixed(2)} - ${ebayData.highestPrice.toFixed(2)}</p>
    <p>Active Listings: {ebayData.activeListing}</p>
  </div>
)}
```

**c. Handling Missing eBay Auth**:  
In your analysis function, if `getEbayMarketAnalysis` returns a 403 error, catch it and then update the UI with a message such as:

```tsx
if (error.message.includes("eBay authentication required")) {
  toast({
    title: "eBay Not Connected",
    description: "Please connect your eBay account to fetch pricing data.",
    variant: "destructive",
    action: (
      <Button variant="outline" size="sm" onClick={() => window.location.href = "/settings/ebay-auth"}>
        Connect eBay
      </Button>
    )
  });
}
```

---

### **Conclusion**

To summarize, you can improve clarity by:

- **Explicitly giving users a toggle or checkbox** to include eBay data in the analysis.
- **Providing immediate visual feedback** about the eBay connection status (e.g. showing a warning badge if the token is missing).
- **Displaying the fetched eBay data** in its own section (using cards, lists, or charts) so users can review the live market data.
- **Handling errors and providing direct actions** (like a “Connect eBay” button) when the API returns a 403.

These enhancements will make the process more transparent and user friendly while ensuring that the pricing data is clearly visible and actionable.

Let me know if you’d like further details or examples on any of these points!